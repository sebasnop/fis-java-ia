FUNCTION_BLOCK tipper	// Definición de bloque

// El único tipo de variable soportada es REAL

// Definición de las variables de entrada
VAR_INPUT				
        humedad : REAL; RANGE := (0 .. 10);
        intensidad : REAL; RANGE := (0 .. 10);
        volumen : REAL; RANGE := (0 .. 10);
END_VAR

// Definición de las variables de salida
VAR_OUTPUT				
        temperatura : REAL; RANGE := (165 .. 225);
END_VAR

// Fuzzificación de la variable de entrada 'humedad'
FUZZIFY humedad
        TERM baja := trape 0 0 0.5 4.5;
        TERM media := trian 0.5 5 9.5;
        TERM alta := trape 5.5 9.5 10 10;
END_FUZZIFY

// Fuzzificación de la variable de entrada 'intensidad'
FUZZIFY intensidad
        TERM baja := trape 0 0 3 8;
        TERM alta := trape 4 9 10 10;
END_FUZZIFY

// Fuzzificación de la variable de entrada 'volumen'
FUZZIFY volumen
        TERM pequeno := trape 0 0 1 4;
        TERM mediano := trian 1 5 9;
        TERM grande := trape 6 9 10 10;
END_FUZZIFY

// Defuzzificación de la variable de salida 'temperatura'
DEFUZZIFY temperatura
        TERM baja := trape 165 165 175 185;
        TERM media := trian 180 195 210;
        TERM alta := trape 205 215 225 225;

        METHOD : COG;		// Usa el metodo de 'Centro de Gravedad'
        DEFAULT := 0;		// Valor por defecto si ninguna regla activa el defuzzificador
END_DEFUZZIFY

// Reglas de inferencia
RULEBLOCK No1
        AND : MIN;	// Usa el 'mín' para el 'AND' y por defecto el 'máx' para el 'OR' (operador difuso).
        ACT : MIN;	// Usa el metodo 'min' para la activación/implicación (trunca)
        ACCU : MAX;	// Usa el 'max' para la acumulación/agregación

        RULE 1 : IF (servicio IS pobre) OR (comida IS rancia) THEN propina IS baja;
        RULE 2 : IF (servicio IS bueno) THEN propina IS promedio; 
        RULE 3 : IF (servicio IS excelente) OR (comida IS deliciosa) THEN propina IS generosa;
        RULE 4 : IF (servicio IS pobre) AND (comida IS deliciosa) THEN propina IS promedio;

//      RULE N : IF (var1 IS a) AND ((var2 IS b) AND ((var3 IS c) AND (var4 IS d)))
//      THEN salida1 IS x, salida2 IS y;
END_RULEBLOCK

END_FUNCTION_BLOCK